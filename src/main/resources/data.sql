CREATE TABLE products
(
    id NUMERIC GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    material_no NUMERIC UNIQUE NOT NULL,
    material_desc_rus VARCHAR2(255),
    l3_product_category_code NUMERIC,
    l3_product_category_name VARCHAR2(255)
);
INSERT INTO products (material_no, material_desc_rus, l3_product_category_code, l3_product_category_name)
SELECT * FROM CSVREAD('classpath:tables-data/products.csv', null, 'charset=UTF-8 fieldSeparator=;');

CREATE TABLE price
(
    id NUMERIC GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chain_name VARCHAR2(255),
    material_no NUMERIC,
    regular_price_per_unit NUMERIC(19,6),
    FOREIGN KEY (material_no) REFERENCES products(material_no)
);
INSERT INTO price (chain_name, material_no, regular_price_per_unit)
SELECT * FROM CSVREAD('classpath:tables-data/price.csv', null, 'charset=UTF-8 fieldSeparator=;');

CREATE TABLE customers
(
    id NUMERIC GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ch3_ship_to_code NUMERIC,
    ch3_ship_to_name VARCHAR2(255),
    chain_name VARCHAR2(255)
);
INSERT INTO customers (ch3_ship_to_code, ch3_ship_to_name, chain_name)
SELECT * FROM CSVREAD('classpath:tables-data/customers.csv', null, 'charset=UTF-8 fieldSeparator=;');

CREATE TABLE actuals
(
    id NUMERIC GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date date,
    material_no NUMERIC,
    ch3_ship_to_code VARCHAR2(255),
    chain_name VARCHAR2(255),
    volume INT,
    actual_sales_value NUMERIC(19,6),
    ship_type VARCHAR2(20) NOT NULL DEFAULT 'Regular'
);
INSERT INTO actuals(date, material_no, ch3_ship_to_code, chain_name, volume, actual_sales_value)
SELECT * FROM CSVREAD('classpath:tables-data/actuals.csv', null, 'charset=UTF-8 fieldSeparator=;');

CREATE INDEX actuals_materialNo_idx ON actuals(material_no, date);

UPDATE actuals a
SET a.ship_type = 'Promo'
WHERE ROUND((a.actual_sales_value / a.volume), 2) < ROUND((SELECT p.regular_price_per_unit
                                            FROM price p
                                            WHERE p.material_no = a.material_no AND p.chain_name = a.chain_name), 2);